{"version":3,"sources":["components/UserTile.js","components/PaginationCustom.js","assets/robot_hand.jpg","components/JumbotronComp.js","components/NavigationBar.js","pages/Home.js","pages/Overview.js","pages/User.js","pages/NoMatch.js","components/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["Styles","styled","div","UserTile","props","Container","Row","Col","md","className","userName","userRank","to","id","customStyles","ul","marginLeft","PaginationCustom","onChangePage","bind","state","exampleItems","pageOfItems","this","setState","Fragment","map","user","displayName","currentRanking","items","users","styles","React","Component","robotHandImg","Jumbotron","fluid","title","text","NavigationBar","Navbar","Brand","href","Toggle","Collapse","Nav","Item","Link","Home","useState","setUsers","useEffect","a","fetch","process","response","json","data","fetchUsers","Overview","Card","Header","Body","ListGroup","ListGroupItem","Text","User","setUser","useParams","userId","console","log","fetchUser","tier","userJoinDate","points","userUrl","animate","animationDuration","animationEasing","center","value","totalGoldMedals","color","totalSilverMedals","totalBronzeMedals","lengthAngle","lineWidth","paddingAngle","radius","rounded","startAngle","viewBoxSize","label","dataEntry","labelPosition","labelStyle","fontSize","fontColor","fontWeight","NoMatch","Layout","children","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bd553e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link} from 'react-router-dom';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`  \r\n    .cart  {\r\n        background-color: #E5E6EB;      \r\n        color: #222;        \r\n        margin: 0.5rem auto;\r\n        border-radius: 1rem;        \r\n        padding: 1rem 1rem;        \r\n    }\r\n   \r\n`;\r\n\r\nexport const UserTile = (props) => {   \r\n   \r\n    return (\r\n        <Styles>\r\n            <Container>\r\n                <Row >\r\n                    <Col md=\"1\" > </Col>\r\n                    <Col md=\"10\" className=\"justify-content-md-center\">                \r\n                        <Row className=\"cart \">\r\n                            <Col md=\"6\" className=\"user-name\">                \r\n                            {props.userName}\r\n                            </Col>\r\n                            <Col md=\"4\" className=\"rank\">\r\n                                #{props.userRank}\r\n                            </Col>\r\n                            <Col md=\"2\" className=\"\">                        \r\n                                <Link to={`/users/${props.id}`}> More > </Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>                    \r\n                </Row>\r\n            </Container>\r\n        </Styles>\r\n     \r\n    )\r\n}","import React from 'react';\r\nimport JwPagination from 'jw-react-pagination';\r\nimport {UserTile} from '../components/UserTile';\r\n\r\nconst customStyles = {\r\n    ul: {        \r\n        marginLeft: '15rem',        \r\n    }\r\n};\r\n\r\n\r\nclass PaginationCustom extends React.Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // an example array of items to be paged\r\n        var exampleItems = [];\r\n\r\n        // bind the onChangePage method to this React component\r\n        this.onChangePage = this.onChangePage.bind(this);\r\n\r\n        // store example items and current page of items in local state\r\n        this.state = {\r\n            exampleItems,\r\n            pageOfItems: []\r\n        };\r\n    }\r\n\r\n    onChangePage(pageOfItems) {\r\n        // update local state with new page of items\r\n        this.setState({ pageOfItems });\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                {this.state.pageOfItems.map(user =>\r\n                    <UserTile key={user.id} id = {user.id}  userName={user.displayName} userRank={user.currentRanking} />\r\n                )}               \r\n                <JwPagination items={this.props.users} onChangePage={this.onChangePage} styles={customStyles}  />\r\n            </ React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaginationCustom;","export default __webpack_public_path__ + \"static/media/robot_hand.c893eb98.jpg\";","import React from 'react';\r\nimport { Jumbotron as Jumbo , Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport robotHandImg from '../assets/robot_hand.jpg';\r\n\r\nconst Styles = styled.div`\r\n  .jumbo {\r\n    background: url(${robotHandImg}) no-repeat fixed bottom;\r\n    background-size: cover;\r\n    color: #efefef;\r\n    height: 200px;\r\n    position: relative;\r\n    z-index: -2;\r\n   \r\n  }\r\n  .overlay {\r\n    background-color: #000;\r\n    opacity: 0.3;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: -1;\r\n  }\r\n  .jumbo-text {\r\n    padding-top: 3rem;\r\n  }\r\n`;\r\n\r\nexport const Jumbotron = (props) => (\r\n  <Styles>\r\n    <Jumbo fluid className=\"jumbo\">\r\n      <div className=\"overlay\"></div>\r\n      <Container className=\"jumbo-text\">\r\n        <h1>{props.title}</h1>\r\n        <p>{props.text}</p>\r\n      </Container>\r\n    </Jumbo>\r\n  </Styles>\r\n)","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n  .navbar {\r\n    background-color: #222;\r\n  }\r\n  a, .navbar-brand, .navbar-nav .nav-link {\r\n    color: #bbb;\r\n    &:hover {\r\n      color: white;\r\n    }\r\n  }\r\n  .kaggle{\r\n    color: #20BEFF;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport const NavigationBar = () => (\r\n  <Styles>\r\n    <Navbar  >\r\n      <Navbar.Brand href=\"https://www.kaggle.com/\">\r\n        <span className=\"kaggle\">Kaggle </span>Competition Dashboard\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n        <Nav className=\"ml-auto\">\r\n          <Nav.Item>\r\n            <Nav.Link>\r\n              <Link to=\"/\">Home</Link>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link>\r\n              <Link to=\"/overview\">Overview</Link>\r\n            </Nav.Link>\r\n          </Nav.Item>          \r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  </Styles >\r\n)","import React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport { Container, Row} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport  PaginationCustom  from '../components/PaginationCustom';\r\nimport { Jumbotron } from '../components/JumbotronComp';\r\nimport { NavigationBar } from '../components/NavigationBar';\r\n\r\nconst Styles = styled.div`  \r\n    .backgroundCustom {\r\n        background-color: #222;    \r\n        position: relative;\r\n        margin:0 ;\r\n        z-index: 5;\r\n    }\r\n    \r\n`;\r\n\r\nexport const Home =() =>  {\r\n    const [users, setUsers] = useState({});\r\n    //const {userId: id} = useParams();\r\n    \r\n    useEffect(() =>{\r\n        const fetchUsers = async () =>{\r\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/user`);\r\n            const data = await response.json();\r\n            setUsers(data);\r\n        }\r\n        fetchUsers();\r\n    }, [])\r\n        \r\n        return ( \r\n            <Styles>\r\n                <NavigationBar />\r\n                <Jumbotron title=\"Welcome\" text=\"List of Kagglers and ranking\" />                \r\n                <Container className=\"backgroundCustom\">\r\n                    <Row >  \r\n                            <PaginationCustom users={users}/> \r\n                    </Row>\r\n                </Container>\r\n                \r\n            </Styles>        \r\n        )   \r\n}\r\n","import React from 'react';\r\nimport { Container, Row, Col, Card, ListGroupItem, ListGroup } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { Jumbotron } from '../components/JumbotronComp';\r\nimport { NavigationBar } from '../components/NavigationBar';\r\n\r\n\r\nconst Styles = styled.div`  \r\n    \r\n    .backgroundCustom {\r\n        background-color: #222;\r\n        position: relative;\r\n        margin:0 ;\r\n        z-index: 5;\r\n        padding: 5rem;\r\n    }\r\n    .row-gap{\r\n        margin-bottom: 1rem;\r\n    }\r\n    .kaggle{\r\n        color: #20BEFF;\r\n        font-weight: bold;\r\n    }\r\n   \r\n`;\r\n\r\nexport const Overview = () => {\r\n    \r\n    return (\r\n        <Styles>\r\n            <NavigationBar />\r\n            <Jumbotron title=\"About This Project\" text=\"Info about Frontend, Backend Techniques and Kaggle website\" />\r\n            <Container className=\"backgroundCustom\">\r\n                <Row className=\"row-gap\">\r\n                    <Col md=\"5\">\r\n                        <Card>\r\n                            <Card.Header>Frontend Tech</Card.Header>\r\n                            <Card.Body>\r\n                                <ListGroup className=\"list-group-flush\">\r\n                                    <ListGroupItem>React</ListGroupItem>\r\n                                    <ListGroupItem>React Bootstrap</ListGroupItem>\r\n                                    <ListGroupItem>react-minimal-pie-chart</ListGroupItem>\r\n                                    <ListGroupItem>jw-react-pagination</ListGroupItem>\r\n                                    <ListGroupItem>styled-components</ListGroupItem>\r\n                                </ListGroup>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    \r\n                    <Col md=\"6\">\r\n                        <Card>\r\n                            <Card.Header>Backend Tech</Card.Header>\r\n                            <Card.Body>\r\n                                <ListGroup className=\"list-group-flush\">\r\n                                    <ListGroupItem>Spring Boot</ListGroupItem>\r\n                                    <ListGroupItem>Spring JPA</ListGroupItem>\r\n                                    <ListGroupItem>Spring Hsql for in-memory sql</ListGroupItem>\r\n                                    <ListGroupItem>Spring Batch reads .csv file from Kaggle.com </ListGroupItem>\r\n                                    <ListGroupItem>Spring MVC</ListGroupItem>\r\n                                </ListGroup>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>                    \r\n                    <Col md=\"11\">\r\n                            <Card>\r\n                                <Card.Header><span className=\"kaggle\">Kaggle </span> Website Overview</Card.Header>\r\n                                <Card.Body>\r\n                                   <Card.Text>\r\n                                   Kaggle, a subsidiary of Google LLC, is an online community of data scientists \r\n                                   and machine learning practitioners. ... Kaggle got its start in 2010 by offering\r\n                                    machine learning competitions and now also offers a public data platform, a cloud-based \r\n                                    workbench for data science, and Artificial Intelligence education (wikipedia).\r\n                                   </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                    </Col>\r\n                    <Col  md=\"1\"></Col>\r\n                </Row>\r\n               \r\n            </Container>\r\n        </Styles>\r\n     \r\n    )\r\n}","import React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport styled from 'styled-components';\r\nimport { Jumbotron } from '../components/JumbotronComp';\r\nimport { NavigationBar } from '../components/NavigationBar';\r\n\r\nconst Styles = styled.div`  \r\n     .user-detail  {            \r\n        color: white;\r\n        margin: auto;\r\n        border-radius: 2rem;\r\n        font-weight: 600;\r\n        & > div {\r\n            padding-top: 2rem;\r\n        }\r\n    }\r\n     .pie-chart {\r\n        margin-top: 1rem;\r\n        \r\n    }\r\n    .backgroundCustom {\r\n        background-color: #222;\r\n        position: relative;\r\n        margin:0 ;\r\n        z-index: 5;\r\n    }\r\n`;\r\n\r\nexport const User = () => {\r\n    const [user, setUser] = useState({});\r\n    const {userId: id} = useParams();\r\n    \r\n    useEffect(() =>{\r\n        const fetchUser = async () =>{\r\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/user/${id}`);\r\n            const data = await response.json();\r\n            setUser(data);\r\n            console.log(data);\r\n\r\n        }\r\n        fetchUser();\r\n    }, [id])\r\n    return (\r\n        <Styles>\r\n            <NavigationBar />\r\n            <Jumbotron title={user.displayName} text={`Ranking: #${user.currentRanking}`} />\r\n            <Container className=\"backgroundCustom\">\r\n                <Row>\r\n                    <Col md=\"6\" className=\"user-detail\">    \r\n                        <Row>\r\n                            <Col>Title:</Col>\r\n                            <Col>{user.tier}</Col>\r\n                        </Row>  \r\n                        <Row>\r\n                            <Col>Join Date:</Col>\r\n                            <Col>{user.userJoinDate}</Col>\r\n                        </Row>  \r\n                        <Row>\r\n                            <Col>Total Points:</Col>\r\n                            <Col>{user.points}</Col>\r\n                        </Row>   \r\n                        <Row>\r\n                            <Col>Kaggle Profile:</Col>\r\n                            <Col> \r\n                            <a href={`https://www.kaggle.com${user.userUrl}`}>{user.userUrl}</a> </Col>\r\n                        </Row>       \r\n                       \r\n                    </Col>\r\n                    <Col md=\"6\" className=\"pie-chart\">\r\n                        <PieChart\r\n                        animate\r\n                        animationDuration={500}\r\n                        animationEasing=\"ease-out\"\r\n                        center={[50, 50]}\r\n                        data={[            \r\n                            { title: 'Gold Medals', value: user.totalGoldMedals, color: '#f2d675' },\r\n                            { title: 'Silver Medals', value:  user.totalSilverMedals, color: '#C4C4C4' },\r\n                            { title: 'Bronze Medals', value:  user.totalBronzeMedals, color: '#57472C' },\r\n                        ]}\r\n                        lengthAngle={360}\r\n                        lineWidth={45}\r\n                        paddingAngle={0}\r\n                        radius={50}\r\n                        rounded\r\n                        startAngle={0}\r\n                        viewBoxSize={[100, 100]}\r\n                        label={(data) => data.dataEntry.value + \" \" + data.dataEntry.title}\r\n                        labelPosition={80}\r\n                        labelStyle={{\r\n                            fontSize: \"0.18rem\",\r\n                            fontColor: \"FFFFFA\",\r\n                            fontWeight: \"800\",\r\n                        }}\r\n                        />\r\n                  \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Styles>\r\n     \r\n    )\r\n}","import React from 'react';\r\nimport { Jumbotron } from '../components/JumbotronComp';\r\nimport { NavigationBar } from '../components/NavigationBar';\r\n\r\n\r\nexport const NoMatch =() =>  {  \r\n        \r\n        return ( \r\n            <React.Fragment>\r\n                <NavigationBar />\r\n                <Jumbotron title=\"Page Not Found\" text=\"\" />           \r\n            </React.Fragment>        \r\n        )   \r\n}\r\n","import React from 'react';\r\nimport {Container} from 'react-bootstrap';\r\n\r\nexport const Layout = (props) => {\r\n    return (\r\n        <Container>\r\n            {props.children}\r\n        </Container>\r\n    )\r\n}","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport React, { Component } from 'react';\n\nimport { Home } from './pages/Home';\nimport { Overview } from './pages/Overview';\nimport { User } from './pages/User';\nimport { NoMatch } from './pages/NoMatch';\nimport { Layout } from './components/Layout';\n\nclass App extends Component {\n  render() {\n  return (\n    <React.Fragment>\n        <Router>\n          <Layout>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/overview\" component={Overview} />\n              <Route path=\"/users/:userId\" component={User} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Layout>\n        </Router>\n      </React.Fragment>\n\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}